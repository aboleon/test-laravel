<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        DB::statement("CREATE OR REPLACE VIEW orders_view AS
select `o`.`id` AS `id`,`o`.`event_id` AS `event_id`,`o`.`created_at` AS `date`,`o`.`client_type` AS `client_type`,`o`.`origin` AS `origin`,`o`.`marker` AS `marker`,case when 'group' collate utf8mb4_unicode_ci = `o`.`client_type` then 'Groupe' when 'contact' collate utf8mb4_unicode_ci = `o`.`client_type` then 'Participant' end AS `client_type_display`,`o`.`client_id` AS `client_id`,`o`.`status` AS `status`,`ft`.`transaction_id` AS `paybox_num_trans`,case when 'paid' collate utf8mb4_unicode_ci = `o`.`status` then 'Soldée' when 'unpaid' collate utf8mb4_unicode_ci = `o`.`status` then 'Non-soldée' end AS `status_display`,`oi`.`invoice_number` AS `invoice_number`,case when 'group' collate utf8mb4_unicode_ci = `o`.`client_type` then `g`.`name` when 'contact' collate utf8mb4_unicode_ci = `o`.`client_type` then concat(`u`.`last_name`,' ',`u`.`first_name`) end AS `name`,format((`o`.`total_net` + `o`.`total_vat`) / 100,2) AS `total`,format(coalesce(`p`.`payments_total`,0) / 100,2) AS `payments_total`,format(`o`.`total_pec` / 100,2) AS `total_pec`,`ec`.`order_cancellation` AS `order_cancellation`,case when `o`.`cancellation_request` is not null then `o`.`cancellation_request` when `ocs`.`cancellation_request` is not null then `ocs`.`cancellation_request` when `oca`.`cancellation_request` is not null then `oca`.`cancellation_request` else NULL end AS `cancellation_request`,case when `o`.`cancelled_at` is not null then `o`.`cancelled_at` when `ocs`.`cancelled_at` is not null then `ocs`.`cancelled_at` when `oca`.`cancelled_at` is not null then `oca`.`cancelled_at` else NULL end AS `cancelled_at`,case when `oi`.`order_id` is not null then 1 else NULL end AS `has_invoice`,case when `oi`.`order_id` is not null then 'Oui' else 'Non' end AS `has_invoice_display`,case when exists(select 1 from `order_cart_service` `ocs1` where `ocs1`.`order_id` = `o`.`id` limit 1) and exists(select 1 from `order_cart_accommodation` `oca1` where `oca1`.`order_id` = `o`.`id` limit 1) then 'Prestations, Hébergement' when exists(select 1 from `order_cart_service` `ocs1` where `ocs1`.`order_id` = `o`.`id` limit 1) then 'Prestations' when exists(select 1 from `order_cart_accommodation` `oca1` where `oca1`.`order_id` = `o`.`id` limit 1) then 'Hébergement' else '-' end AS `contains`,case when `o`.`total_pec` > 0 then 'PEC' else NULL end AS `has_pec`,concat(date_format(`o`.`created_at`,'%d '),case when date_format(`o`.`created_at`,'%m') = '01' collate utf8mb4_unicode_ci then 'Janvier' when date_format(`o`.`created_at`,'%m') = '02' collate utf8mb4_unicode_ci then 'Février' when date_format(`o`.`created_at`,'%m') = '03' collate utf8mb4_unicode_ci then 'Mars' when date_format(`o`.`created_at`,'%m') = '04' collate utf8mb4_unicode_ci then 'Avril' when date_format(`o`.`created_at`,'%m') = '05' collate utf8mb4_unicode_ci then 'Mai' when date_format(`o`.`created_at`,'%m') = '06' collate utf8mb4_unicode_ci then 'Juin' when date_format(`o`.`created_at`,'%m') = '07' collate utf8mb4_unicode_ci then 'Juillet' when date_format(`o`.`created_at`,'%m') = '08' collate utf8mb4_unicode_ci then 'Août' when date_format(`o`.`created_at`,'%m') = '09' collate utf8mb4_unicode_ci then 'Septembre' when date_format(`o`.`created_at`,'%m') = '10' collate utf8mb4_unicode_ci then 'Octobre' when date_format(`o`.`created_at`,'%m') = '11' collate utf8mb4_unicode_ci then 'Novembre' when date_format(`o`.`created_at`,'%m') = '12' collate utf8mb4_unicode_ci then 'Décembre' end,date_format(`o`.`created_at`,' %Y à %H:%i')) AS `date_display`
from ((((((((`orders` `o`
left join `order_invoices` `oi` on(`oi`.`order_id` = `o`.`id`))
left join `front_transactions` `ft` on(`ft`.`order_id` = `o`.`id`))
left join `groups` `g` on(`o`.`client_type` = 'group' and `g`.`id` = `o`.`client_id`))
left join `users` `u` on(`o`.`client_type` = 'contact' and `u`.`id` = `o`.`client_id`))
left join (select `op`.`order_id` AS `order_id`,sum(`op`.`amount`) AS `payments_total` from `order_payments` `op` group by `op`.`order_id`) `p` on(`p`.`order_id` = `o`.`id`))
left join `events_contacts` `ec` on(`o`.`client_type` = 'contact' and `u`.`id` = `ec`.`user_id` and `o`.`event_id` = `ec`.`event_id`))
left join (select `ocs`.`order_id` AS `order_id`,max(`ocs`.`cancellation_request`) AS `cancellation_request`,max(`ocs`.`cancelled_at`) AS `cancelled_at` from `order_cart_service` `ocs` group by `ocs`.`order_id`) `ocs` on(`ocs`.`order_id` = `o`.`id`))
left join (select `oca`.`order_id` AS `order_id`,max(`oca`.`cancellation_request`) AS `cancellation_request`,max(`oca`.`cancelled_at`) AS `cancelled_at` from `order_cart_accommodation` `oca` group by `oca`.`order_id`) `oca` on(`oca`.`order_id` = `o`.`id`))
where `o`.`parent_id` is null
        ");
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {

        DB::statement("CREATE OR REPLACE VIEW orders_view AS
        select `o`.`id` AS `id`,`o`.`event_id` AS `event_id`,`o`.`created_at` AS `date`,`o`.`client_type` AS `client_type`,`o`.`origin` AS `origin`,`o`.`marker` AS `marker`,case when 'group' collate utf8mb4_unicode_ci = `o`.`client_type` then 'Groupe' when 'contact' collate utf8mb4_unicode_ci = `o`.`client_type` then 'Participant' end AS `client_type_display`,`o`.`client_id` AS `client_id`,`o`.`status` AS `status`,`ft`.`transaction_id` AS `paybox_num_trans`,case when 'paid' collate utf8mb4_unicode_ci = `o`.`status` then 'Soldée' when 'unpaid' collate utf8mb4_unicode_ci = `o`.`status` then 'Non-soldée' end AS `status_display`,`oi`.`invoice_number` AS `invoice_number`,case when 'group' collate utf8mb4_unicode_ci = `o`.`client_type` then `g`.`name` when 'contact' collate utf8mb4_unicode_ci = `o`.`client_type` then concat(`u`.`last_name`,' ',`u`.`first_name`) end AS `name`,format((`o`.`total_net` + `o`.`total_vat`) / 100,2) AS `total`,format(coalesce(`p`.`payments_total`,0) / 100,2) AS `payments_total`,format(`o`.`total_pec` / 100,2) AS `total_pec`,`ec`.`order_cancellation` AS `order_cancellation`,case when `o`.`cancellation_request` is not null then `o`.`cancellation_request` when `ocs`.`cancellation_request` is not null then `ocs`.`cancellation_request` when `oca`.`cancellation_request` is not null then `oca`.`cancellation_request` else NULL end AS `cancellation_request`,case when `o`.`cancelled_at` is not null then `o`.`cancelled_at` when `ocs`.`cancelled_at` is not null then `ocs`.`cancelled_at` when `oca`.`cancelled_at` is not null then `oca`.`cancelled_at` else NULL end AS `cancelled_at`,case when `oi`.`order_id` is not null then 1 else NULL end AS `has_invoice`,case when `oi`.`order_id` is not null then 'Oui' else 'Non' end AS `has_invoice_display`,case when exists(select 1 from `order_cart_service` `ocs1` where `ocs1`.`order_id` = `o`.`id` limit 1) and exists(select 1 from `order_cart_accommodation` `oca1` where `oca1`.`order_id` = `o`.`id` limit 1) then 'Prestations, Hébergement' when exists(select 1 from `order_cart_service` `ocs1` where `ocs1`.`order_id` = `o`.`id` limit 1) then 'Prestations' when exists(select 1 from `order_cart_accommodation` `oca1` where `oca1`.`order_id` = `o`.`id` limit 1) then 'Hébergement' else '-' end AS `contains`,case when `o`.`total_pec` > 0 then 'PEC' else NULL end AS `has_pec`,concat(date_format(`o`.`created_at`,'%d '),case when date_format(`o`.`created_at`,'%m') = '01' collate utf8mb4_unicode_ci then 'Janvier' when date_format(`o`.`created_at`,'%m') = '02' collate utf8mb4_unicode_ci then 'Février' when date_format(`o`.`created_at`,'%m') = '03' collate utf8mb4_unicode_ci then 'Mars' when date_format(`o`.`created_at`,'%m') = '04' collate utf8mb4_unicode_ci then 'Avril' when date_format(`o`.`created_at`,'%m') = '05' collate utf8mb4_unicode_ci then 'Mai' when date_format(`o`.`created_at`,'%m') = '06' collate utf8mb4_unicode_ci then 'Juin' when date_format(`o`.`created_at`,'%m') = '07' collate utf8mb4_unicode_ci then 'Juillet' when date_format(`o`.`created_at`,'%m') = '08' collate utf8mb4_unicode_ci then 'Août' when date_format(`o`.`created_at`,'%m') = '09' collate utf8mb4_unicode_ci then 'Septembre' when date_format(`o`.`created_at`,'%m') = '10' collate utf8mb4_unicode_ci then 'Octobre' when date_format(`o`.`created_at`,'%m') = '11' collate utf8mb4_unicode_ci then 'Novembre' when date_format(`o`.`created_at`,'%m') = '12' collate utf8mb4_unicode_ci then 'Décembre' end,date_format(`o`.`created_at`,' %Y à %H:%i')) AS `date_display` from ((((((((`orders` `o` left join `order_invoices` `oi` on(`oi`.`order_id` = `o`.`id`)) left join `front_transactions` `ft` on(`ft`.`order_id` = `o`.`id`)) left join `groups` `g` on(`o`.`client_type` = 'group' and `g`.`id` = `o`.`client_id`)) left join `users` `u` on(`o`.`client_type` = 'contact' and `u`.`id` = `o`.`client_id`)) left join (select `op`.`order_id` AS `order_id`,sum(`op`.`amount`) AS `payments_total` from `order_payments` `op` group by `op`.`order_id`) `p` on(`p`.`order_id` = `o`.`id`)) left join `events_contacts` `ec` on(`o`.`client_type` = 'contact' and `u`.`id` = `ec`.`user_id` and `o`.`event_id` = `ec`.`event_id`)) left join (select `ocs`.`order_id` AS `order_id`,max(`ocs`.`cancellation_request`) AS `cancellation_request`,max(`ocs`.`cancelled_at`) AS `cancelled_at` from `order_cart_service` `ocs` group by `ocs`.`order_id`) `ocs` on(`ocs`.`order_id` = `o`.`id`)) left join (select `oca`.`order_id` AS `order_id`,max(`oca`.`cancellation_request`) AS `cancellation_request`,max(`oca`.`cancelled_at`) AS `cancelled_at` from `order_cart_accommodation` `oca` group by `oca`.`order_id`) `oca` on(`oca`.`order_id` = `o`.`id`)) ");
    }
};
